name: Release

on:
  push:
    tags:
      - v*

jobs:
  build:
    name: Build
    permissions:
      contents: write
      packages: write
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
    steps:
      - name: Clone Repository
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Install DBus
        if: contains(matrix.os, 'ubuntu')
        run: |
          sudo apt-get update
          sudo apt-get install -y libdbus-1-dev

      - name: Setup CMake
        if: contains(matrix.os, 'macos')
        uses: jwlawson/actions-setup-cmake@v1.12
        with:
          cmake-version: '3.21.x'

      - name: Add msbuild to PATH
        if: contains(matrix.os, 'windows')
        uses: microsoft/setup-msbuild@v1.0.2

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "npm"
          registry-url: 'https://registry.npmjs.org'

      - name: Setup Deno
        uses: denoland/setup-deno@main
        with:
          deno-version: 'v1.x'

      - name: Install dependencies
        run: npm ci --ignore-scripts

      - name: Build
        run: npm run build

      - name: Run prebuild
        run: npm run pre-build

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: builds
          path: |
            build/Release/*
            prebuilds/*
            !build/Release/*.node
          retention-days: 1

  build-cross:
    name: Cross-build
    permissions:
      contents: write
      packages: write
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch:
          - arm64
    steps:
      - name: Clone Repository
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Install DBus
        run: |
          sudo apt-get update
          sudo apt-get install -y libdbus-1-dev

      - name: Install ziglang
        uses: goto-bus-stop/setup-zig@v1
        with:
          version: 0.10.0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "npm"
          registry-url: 'https://registry.npmjs.org'

      - name: Setup Deno
        uses: denoland/setup-deno@main
        with:
          deno-version: 'v1.x'

      - name: Install Deps
        run: bash ./extract.sh ${{ matrix.arch }}

      - name: Install dependencies
        run: npm ci --ignore-scripts

      - name: Build
        run: |
          npm run build-deno
          npm run build-ts
          npm run pre-build-${{ matrix.arch }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: builds
          path: |
            prebuilds/*
          retention-days: 1

  deploy:
    name: Deploy
    permissions:
      contents: write
      packages: write
    needs: [ build, build-cross ]
    runs-on: ubuntu-latest
    steps:
      - name: Clone Repository
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
          cache: "npm"
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci --ignore-scripts

      - name: Build
        run: npm run build-ts

      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: builds

      - name: Upload
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          fail_on_unmatched_files: false
          files: |
            ./build/Release/*.so
            ./build/Release/*.dylib
            ./build/Release/*.dll
            ./prebuilds/*.tar.gz

      - name: Publish
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
